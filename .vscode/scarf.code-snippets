{
	// Place your scarf workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Parser - Arrow": {
		"prefix": ["parserarrow"],
		"body": [" -> impl Parser<${1:input}, ${2:output}, Error = Simple<${1:input}>>"]
	},
	"Parser": {
		"prefix": ["parserimpl"],
		"body": ["impl Parser<${1:input}, ${2:output}, Error = Simple<${1:input}>>"]
	},
	"Add Documentation Notice": {
		"prefix": "//ADDDOC",
		"body": "//ADDDOC",
	},
	"Parser - Function": {
		"prefix": ["parserfn"],
		"body": [
			"pub fn parser() -> impl Parser<${1:input}, ${2:output}, Error = Simple<${1:input}>> {",
			"    ${0:parser}",
			"}"
		]
	},
	// "Imply Parsable": {
	// 	"prefix": "#[imply] impl Parsable<",
	// 	"body": "#[imply] impl Parsable<${2:output}> for ${1:parent} {}"
	// }
}
